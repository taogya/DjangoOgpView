# Generated by Django 4.2.3 on 2023-07-22 17:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django_ogp.models import create_master


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='OgpLocaleMaster',
            fields=[
                ('name', models.CharField(choices=[('C', 'C'), ('aa_DJ', 'Aa Dj'), ('aa_ER', 'Aa Er'), ('aa_ET', 'Aa Et'), ('af_ZA', 'Af Za'), ('agr_PE', 'Agr Pe'), ('ak_GH', 'Ak Gh'), ('am_ET', 'Am Et'), ('an_ES', 'An Es'), ('anp_IN', 'Anp In'), ('ar_AA', 'Ar Aa'), ('ar_AE', 'Ar Ae'), ('ar_BH', 'Ar Bh'), ('ar_DZ', 'Ar Dz'), ('ar_EG', 'Ar Eg'), ('ar_IN', 'Ar In'), ('ar_IQ', 'Ar Iq'), ('ar_JO', 'Ar Jo'), ('ar_KW', 'Ar Kw'), ('ar_LB', 'Ar Lb'), ('ar_LY', 'Ar Ly'), ('ar_MA', 'Ar Ma'), ('ar_OM', 'Ar Om'), ('ar_QA', 'Ar Qa'), ('ar_SA', 'Ar Sa'), ('ar_SD', 'Ar Sd'), ('ar_SS', 'Ar Ss'), ('ar_SY', 'Ar Sy'), ('ar_TN', 'Ar Tn'), ('ar_YE', 'Ar Ye'), ('as_IN', 'As In'), ('ast_ES', 'Ast Es'), ('ayc_PE', 'Ayc Pe'), ('az_AZ', 'Az Az'), ('az_IR', 'Az Ir'), ('be_BY', 'Be By'), ('bem_ZM', 'Bem Zm'), ('ber_DZ', 'Ber Dz'), ('ber_MA', 'Ber Ma'), ('bg_BG', 'Bg Bg'), ('bhb_IN', 'Bhb In'), ('bho_IN', 'Bho In'), ('bho_NP', 'Bho Np'), ('bi_VU', 'Bi Vu'), ('bn_BD', 'Bn Bd'), ('bn_IN', 'Bn In'), ('bo_CN', 'Bo Cn'), ('bo_IN', 'Bo In'), ('br_FR', 'Br Fr'), ('brx_IN', 'Brx In'), ('bs_BA', 'Bs Ba'), ('byn_ER', 'Byn Er'), ('ca_AD', 'Ca Ad'), ('ca_ES', 'Ca Es'), ('ca_FR', 'Ca Fr'), ('ca_IT', 'Ca It'), ('ce_RU', 'Ce Ru'), ('chr_US', 'Chr Us'), ('ckb_IQ', 'Ckb Iq'), ('cmn_TW', 'Cmn Tw'), ('crh_UA', 'Crh Ua'), ('cs_CZ', 'Cs Cz'), ('csb_PL', 'Csb Pl'), ('cv_RU', 'Cv Ru'), ('cy_GB', 'Cy Gb'), ('da_DK', 'Da Dk'), ('de_AT', 'De At'), ('de_BE', 'De Be'), ('de_CH', 'De Ch'), ('de_DE', 'De De'), ('de_IT', 'De It'), ('de_LI', 'De Li'), ('de_LU', 'De Lu'), ('doi_IN', 'Doi In'), ('dv_MV', 'Dv Mv'), ('dz_BT', 'Dz Bt'), ('ee_EE', 'Ee Ee'), ('el_CY', 'El Cy'), ('el_GR', 'El Gr'), ('en_AG', 'En Ag'), ('en_AU', 'En Au'), ('en_BE', 'En Be'), ('en_BW', 'En Bw'), ('en_CA', 'En Ca'), ('en_DK', 'En Dk'), ('en_DL', 'En Dl'), ('en_EN', 'En En'), ('en_GB', 'En Gb'), ('en_HK', 'En Hk'), ('en_IE', 'En Ie'), ('en_IL', 'En Il'), ('en_IN', 'En In'), ('en_NG', 'En Ng'), ('en_NZ', 'En Nz'), ('en_PH', 'En Ph'), ('en_SC', 'En Sc'), ('en_SG', 'En Sg'), ('en_US', 'En Us'), ('en_ZA', 'En Za'), ('en_ZM', 'En Zm'), ('en_ZS', 'En Zs'), ('en_ZW', 'En Zw'), ('eo', 'Eo'), ('eo_EO', 'Eo Eo'), ('eo_US', 'Eo Us'), ('eo_XX', 'Eo Xx'), ('es_AR', 'Es Ar'), ('es_BO', 'Es Bo'), ('es_CL', 'Es Cl'), ('es_CO', 'Es Co'), ('es_CR', 'Es Cr'), ('es_CU', 'Es Cu'), ('es_DO', 'Es Do'), ('es_EC', 'Es Ec'), ('es_ES', 'Es Es'), ('es_GT', 'Es Gt'), ('es_HN', 'Es Hn'), ('es_MX', 'Es Mx'), ('es_NI', 'Es Ni'), ('es_PA', 'Es Pa'), ('es_PE', 'Es Pe'), ('es_PR', 'Es Pr'), ('es_PY', 'Es Py'), ('es_SV', 'Es Sv'), ('es_US', 'Es Us'), ('es_UY', 'Es Uy'), ('es_VE', 'Es Ve'), ('et_EE', 'Et Ee'), ('eu_ES', 'Eu Es'), ('eu_FR', 'Eu Fr'), ('fa_IR', 'Fa Ir'), ('ff_SN', 'Ff Sn'), ('fi_FI', 'Fi Fi'), ('fil_PH', 'Fil Ph'), ('fo_FO', 'Fo Fo'), ('fr_BE', 'Fr Be'), ('fr_CA', 'Fr Ca'), ('fr_CH', 'Fr Ch'), ('fr_FR', 'Fr Fr'), ('fr_LU', 'Fr Lu'), ('fur_IT', 'Fur It'), ('fy_DE', 'Fy De'), ('fy_NL', 'Fy Nl'), ('ga_IE', 'Ga Ie'), ('gd_GB', 'Gd Gb'), ('gez_ER', 'Gez Er'), ('gez_ET', 'Gez Et'), ('gl_ES', 'Gl Es'), ('gu_IN', 'Gu In'), ('gv_GB', 'Gv Gb'), ('ha_NG', 'Ha Ng'), ('hak_TW', 'Hak Tw'), ('he_IL', 'He Il'), ('hi_IN', 'Hi In'), ('hif_FJ', 'Hif Fj'), ('hne_IN', 'Hne In'), ('hr_HR', 'Hr Hr'), ('hsb_DE', 'Hsb De'), ('ht_HT', 'Ht Ht'), ('hu_HU', 'Hu Hu'), ('hy_AM', 'Hy Am'), ('ia', 'Ia'), ('ia_FR', 'Ia Fr'), ('id_ID', 'Id Id'), ('ig_NG', 'Ig Ng'), ('ik_CA', 'Ik Ca'), ('is_IS', 'Is Is'), ('it_CH', 'It Ch'), ('it_IT', 'It It'), ('iu_CA', 'Iu Ca'), ('iw_IL', 'Iw Il'), ('ja_JP', 'Ja Jp'), ('ka_GE', 'Ka Ge'), ('kab_DZ', 'Kab Dz'), ('kk_KZ', 'Kk Kz'), ('kl_GL', 'Kl Gl'), ('km_KH', 'Km Kh'), ('kn_IN', 'Kn In'), ('ko_KR', 'Ko Kr'), ('kok_IN', 'Kok In'), ('ks_IN', 'Ks In'), ('ku_TR', 'Ku Tr'), ('kw_GB', 'Kw Gb'), ('ky_KG', 'Ky Kg'), ('lb_LU', 'Lb Lu'), ('lg_UG', 'Lg Ug'), ('li_BE', 'Li Be'), ('li_NL', 'Li Nl'), ('lij_IT', 'Lij It'), ('ln_CD', 'Ln Cd'), ('lo_LA', 'Lo La'), ('lt_LT', 'Lt Lt'), ('lv_LV', 'Lv Lv'), ('lzh_TW', 'Lzh Tw'), ('mag_IN', 'Mag In'), ('mai_IN', 'Mai In'), ('mai_NP', 'Mai Np'), ('mfe_MU', 'Mfe Mu'), ('mg_MG', 'Mg Mg'), ('mhr_RU', 'Mhr Ru'), ('mi_NZ', 'Mi Nz'), ('miq_NI', 'Miq Ni'), ('mjw_IN', 'Mjw In'), ('mk_MK', 'Mk Mk'), ('ml_IN', 'Ml In'), ('mn_MN', 'Mn Mn'), ('mni_IN', 'Mni In'), ('mr_IN', 'Mr In'), ('ms_MY', 'Ms My'), ('mt_MT', 'Mt Mt'), ('my_MM', 'My Mm'), ('nan_TW', 'Nan Tw'), ('nb_NO', 'Nb No'), ('nds_DE', 'Nds De'), ('nds_NL', 'Nds Nl'), ('ne_NP', 'Ne Np'), ('nhn_MX', 'Nhn Mx'), ('niu_NU', 'Niu Nu'), ('niu_NZ', 'Niu Nz'), ('nl_AW', 'Nl Aw'), ('nl_BE', 'Nl Be'), ('nl_NL', 'Nl Nl'), ('nn_NO', 'Nn No'), ('no_NO', 'No No'), ('nr_ZA', 'Nr Za'), ('nso_ZA', 'Nso Za'), ('ny_NO', 'Ny No'), ('oc_FR', 'Oc Fr'), ('om_ET', 'Om Et'), ('om_KE', 'Om Ke'), ('or_IN', 'Or In'), ('os_RU', 'Os Ru'), ('pa_IN', 'Pa In'), ('pa_PK', 'Pa Pk'), ('pap_AN', 'Pap An'), ('pap_AW', 'Pap Aw'), ('pap_CW', 'Pap Cw'), ('pd_DE', 'Pd De'), ('pd_US', 'Pd Us'), ('ph_PH', 'Ph Ph'), ('pl_PL', 'Pl Pl'), ('pp_AN', 'Pp An'), ('ps_AF', 'Ps Af'), ('pt_BR', 'Pt Br'), ('pt_PT', 'Pt Pt'), ('quz_PE', 'Quz Pe'), ('raj_IN', 'Raj In'), ('ro_RO', 'Ro Ro'), ('ru_RU', 'Ru Ru'), ('ru_UA', 'Ru Ua'), ('rw_RW', 'Rw Rw'), ('sa_IN', 'Sa In'), ('sat_IN', 'Sat In'), ('sc_IT', 'Sc It'), ('sd_IN', 'Sd In'), ('sd_PK', 'Sd Pk'), ('se_NO', 'Se No'), ('sgs_LT', 'Sgs Lt'), ('sh_HR', 'Sh Hr'), ('shn_MM', 'Shn Mm'), ('shs_CA', 'Shs Ca'), ('si_LK', 'Si Lk'), ('sid_ET', 'Sid Et'), ('sk_SK', 'Sk Sk'), ('sl_CS', 'Sl Cs'), ('sl_SI', 'Sl Si'), ('sm_WS', 'Sm Ws'), ('so_DJ', 'So Dj'), ('so_ET', 'So Et'), ('so_KE', 'So Ke'), ('so_SO', 'So So'), ('sq_AL', 'Sq Al'), ('sq_MK', 'Sq Mk'), ('sr_CS', 'Sr Cs'), ('sr_ME', 'Sr Me'), ('sr_RS', 'Sr Rs'), ('ss_ZA', 'Ss Za'), ('st_ZA', 'St Za'), ('sv_FI', 'Sv Fi'), ('sv_SE', 'Sv Se'), ('sw_KE', 'Sw Ke'), ('sw_TZ', 'Sw Tz'), ('szl_PL', 'Szl Pl'), ('ta_IN', 'Ta In'), ('ta_LK', 'Ta Lk'), ('tcy_IN', 'Tcy In'), ('te_IN', 'Te In'), ('tg_TJ', 'Tg Tj'), ('th_TH', 'Th Th'), ('the_NP', 'The Np'), ('ti_ER', 'Ti Er'), ('ti_ET', 'Ti Et'), ('tig_ER', 'Tig Er'), ('tk_TM', 'Tk Tm'), ('tl_PH', 'Tl Ph'), ('tn_ZA', 'Tn Za'), ('to_TO', 'To To'), ('tpi_PG', 'Tpi Pg'), ('tr_CY', 'Tr Cy'), ('tr_TR', 'Tr Tr'), ('ts_ZA', 'Ts Za'), ('tt_RU', 'Tt Ru'), ('ug_CN', 'Ug Cn'), ('uk_UA', 'Uk Ua'), ('unm_US', 'Unm Us'), ('ur_IN', 'Ur In'), ('ur_PK', 'Ur Pk'), ('uz_UZ', 'Uz Uz'), ('ve_ZA', 'Ve Za'), ('vi_VN', 'Vi Vn'), ('wa_BE', 'Wa Be'), ('wae_CH', 'Wae Ch'), ('wal_ET', 'Wal Et'), ('wo_SN', 'Wo Sn'), ('xh_ZA', 'Xh Za'), ('yi_US', 'Yi Us'), ('yo_NG', 'Yo Ng'), ('yue_HK', 'Yue Hk'), ('yuw_PG', 'Yuw Pg'), ('zh_CN', 'Zh Cn'), ('zh_HK', 'Zh Hk'), ('zh_SG', 'Zh Sg'), ('zh_TW', 'Zh Tw'), ('zu_ZA', 'Zu Za')], primary_key=True, serialize=False, verbose_name='locale')),
            ],
            options={
                'verbose_name': 'locale master',
                'verbose_name_plural': 'locale masters',
                'db_table': 'django_ogp_ogplocalemaster',
                'swappable': 'OGP_LOCALE_MASTER_MODEL',
            },
        ),
        migrations.CreateModel(
            name='OgpMimeTypeMaster',
            fields=[
                ('name', models.CharField(choices=[('application/javascript', 'Application Javascript'), ('application/json', 'Application Json'), ('application/manifest+json', 'Application Manifest Json'), ('application/msword', 'Application Msword'), ('application/octet-stream', 'Application Octet Stream'), ('application/oda', 'Application Oda'), ('application/pdf', 'Application Pdf'), ('application/pkcs7-mime', 'Application Pkcs7 Mime'), ('application/postscript', 'Application Postscript'), ('application/rtf', 'Application Rtf'), ('application/vnd.apple.mpegurl', 'Application Vnd Apple Mpegurl'), ('application/vnd.ms-excel', 'Application Vnd Ms Excel'), ('application/vnd.ms-powerpoint', 'Application Vnd Ms Powerpoint'), ('application/wasm', 'Application Wasm'), ('application/x-bcpio', 'Application X Bcpio'), ('application/x-cpio', 'Application X Cpio'), ('application/x-csh', 'Application X Csh'), ('application/x-dvi', 'Application X Dvi'), ('application/x-gtar', 'Application X Gtar'), ('application/x-hdf', 'Application X Hdf'), ('application/x-hdf5', 'Application X Hdf5'), ('application/x-latex', 'Application X Latex'), ('application/x-mif', 'Application X Mif'), ('application/x-netcdf', 'Application X Netcdf'), ('application/x-pkcs12', 'Application X Pkcs12'), ('application/x-pn-realaudio', 'Application X Pn Realaudio'), ('application/x-python-code', 'Application X Python Code'), ('application/x-sh', 'Application X Sh'), ('application/x-shar', 'Application X Shar'), ('application/x-shockwave-flash', 'Application X Shockwave Flash'), ('application/x-sv4cpio', 'Application X Sv4Cpio'), ('application/x-sv4crc', 'Application X Sv4Crc'), ('application/x-tar', 'Application X Tar'), ('application/x-tcl', 'Application X Tcl'), ('application/x-tex', 'Application X Tex'), ('application/x-texinfo', 'Application X Texinfo'), ('application/x-troff', 'Application X Troff'), ('application/x-troff-man', 'Application X Troff Man'), ('application/x-troff-me', 'Application X Troff Me'), ('application/x-troff-ms', 'Application X Troff Ms'), ('application/x-ustar', 'Application X Ustar'), ('application/x-wais-source', 'Application X Wais Source'), ('application/xml', 'Application Xml'), ('application/zip', 'Application Zip'), ('audio/basic', 'Audio Basic'), ('audio/midi', 'Audio Midi'), ('audio/mpeg', 'Audio Mpeg'), ('audio/x-aiff', 'Audio X Aiff'), ('audio/x-pn-realaudio', 'Audio X Pn Realaudio'), ('audio/x-wav', 'Audio X Wav'), ('image/gif', 'Image Gif'), ('image/ief', 'Image Ief'), ('image/jpeg', 'Image Jpeg'), ('image/jpg', 'Image Jpg'), ('image/pict', 'Image Pict'), ('image/png', 'Image Png'), ('image/svg+xml', 'Image Svg Xml'), ('image/tiff', 'Image Tiff'), ('image/vnd.microsoft.icon', 'Image Vnd Microsoft Icon'), ('image/x-cmu-raster', 'Image X Cmu Raster'), ('image/x-ms-bmp', 'Image X Ms Bmp'), ('image/x-portable-anymap', 'Image X Portable Anymap'), ('image/x-portable-bitmap', 'Image X Portable Bitmap'), ('image/x-portable-graymap', 'Image X Portable Graymap'), ('image/x-portable-pixmap', 'Image X Portable Pixmap'), ('image/x-rgb', 'Image X Rgb'), ('image/x-xbitmap', 'Image X Xbitmap'), ('image/x-xpixmap', 'Image X Xpixmap'), ('image/x-xwindowdump', 'Image X Xwindowdump'), ('message/rfc822', 'Message Rfc822'), ('text/css', 'Text Css'), ('text/csv', 'Text Csv'), ('text/html', 'Text Html'), ('text/plain', 'Text Plain'), ('text/richtext', 'Text Richtext'), ('text/tab-separated-values', 'Text Tab Separated Values'), ('text/x-python', 'Text X Python'), ('text/x-setext', 'Text X Setext'), ('text/x-sgml', 'Text X Sgml'), ('text/x-vcard', 'Text X Vcard'), ('text/xml', 'Text Xml'), ('text/xul', 'Text Xul'), ('video/mp4', 'Video Mp4'), ('video/mpeg', 'Video Mpeg'), ('video/quicktime', 'Video Quicktime'), ('video/webm', 'Video Webm'), ('video/x-msvideo', 'Video X Msvideo'), ('video/x-sgi-movie', 'Video X Sgi Movie')], primary_key=True, serialize=False, verbose_name='mime type')),
            ],
            options={
                'verbose_name': 'mime type master',
                'verbose_name_plural': 'mime type masters',
                'db_table': 'django_ogp_ogpmimetypemaster',
                'swappable': 'OGP_MIMETYPE_MASTER_MODEL',
            },
        ),
        migrations.CreateModel(
            name='OgpSiteProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='My Site Name', max_length=256, verbose_name='name')),
            ],
            options={
                'verbose_name': 'site property',
                'verbose_name_plural': 'site properties',
                'db_table': 'django_ogp_ogpsiteproperty',
                'abstract': False,
                'swappable': 'OGP_SITE_PROPERTY_MODEL',
            },
        ),
        migrations.CreateModel(
            name='OgpMediaProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('audio', 'Audio')], max_length=16, verbose_name='media type')),
                ('url', models.URLField(help_text='http://example.com/static/image/example.png', max_length=256, verbose_name='media url')),
                ('secure_url', models.URLField(blank=True, default=None, help_text='https://example.com/static/image/example.png', max_length=256, null=True, verbose_name='media secure url')),
                ('alt', models.CharField(help_text='Example Image', max_length=256, verbose_name='media description')),
                ('width', models.FloatField(default=0, help_text='0 is not generate.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='media width [px]')),
                ('height', models.FloatField(default=0, help_text='0 is not generate.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='media height [px]')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.OGP_MIMETYPE_MASTER_MODEL, verbose_name='mime type')),
            ],
            options={
                'verbose_name': 'media property',
                'verbose_name_plural': 'media properties',
                'db_table': 'django_ogp_ogpmediaproperty',
            },
        ),
        migrations.CreateModel(
            name='OgpCustomProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('music.song', 'Music Song'), ('music.album', 'Music Album'), ('music.playlist', 'Music Playlist'), ('music.radio_station', 'Music Radio Station'), ('video.movie', 'Video Movie'), ('video.episode', 'Video Episode'), ('video.tv_show', 'Video Tv Show'), ('video.other', 'Video Other'), ('article', 'Article'), ('book', 'Book'), ('profile', 'Profile'), ('website', 'Website')], max_length=32, verbose_name='type')),
                ('url', models.URLField(help_text='http://example.com/test', max_length=256, verbose_name='site url')),
                ('property', models.JSONField(help_text='{"book:author": "Test User", "book:tag": "novel"}', verbose_name='property')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.OGP_SITE_PROPERTY_MODEL, verbose_name='site info')),
            ],
            options={
                'verbose_name': 'custom property',
                'verbose_name_plural': 'custom properties',
                'db_table': 'django_ogp_ogpcustomproperty',
            },
        ),
        migrations.CreateModel(
            name='OgpBasicProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Test Page', max_length=256, verbose_name='title')),
                ('type', models.CharField(choices=[('music.song', 'Music Song'), ('music.album', 'Music Album'), ('music.playlist', 'Music Playlist'), ('music.radio_station', 'Music Radio Station'), ('video.movie', 'Video Movie'), ('video.episode', 'Video Episode'), ('video.tv_show', 'Video Tv Show'), ('video.other', 'Video Other'), ('article', 'Article'), ('book', 'Book'), ('profile', 'Profile'), ('website', 'Website')], max_length=32, verbose_name='type')),
                ('url', models.URLField(help_text='http://example.com/test', max_length=256, verbose_name='site url')),
                ('description', models.CharField(blank=True, help_text='This is Test Page.', max_length=256, null=True, verbose_name='description')),
                ('determiner', models.CharField(blank=True, choices=[('a', 'A'), ('an', 'An'), ('the', 'The'), ('', 'Blank'), ('auto', 'Auto')], max_length=4, null=True, verbose_name='type')),
                ('locales', models.ManyToManyField(blank=True, related_name='basics', to=settings.OGP_LOCALE_MASTER_MODEL, verbose_name='locales')),
                ('medias', models.ManyToManyField(blank=True, related_name='basics', to='django_ogp.ogpmediaproperty', verbose_name='medias')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.OGP_SITE_PROPERTY_MODEL, verbose_name='site info')),
            ],
            options={
                'verbose_name': 'basic property',
                'verbose_name_plural': 'basic properties',
                'db_table': 'django_ogp_ogpbasicproperty',
            },
        ),
        migrations.RunPython(create_master),
    ]
